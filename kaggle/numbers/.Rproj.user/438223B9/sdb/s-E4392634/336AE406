{
    "contents" : "source(\"/numbers/adjNumVector.R\")\nlibrary(sda)\nlibrary(randomForest)\nlibrary(FNN)\nlibrary(kknn)\ntrain <- read.csv(\"/Users/u78671/Downloads/train.csv\", header=TRUE)\ntest <- read.csv(\"/Users/u78671/Downloads/test.csv\", header=TRUE)\n\n\nnameV <- colnames( test )\nnameV <- nameV[1:784]\n\ntestP <- matrix(0, 0,288) \ncolnames(testP) <- nameV[1:288]\n\ntrainP <- matrix(0, 0,288) \ncolnames(trainP) <- nameV[1:288]\n\nlabels <- as.character(train[,1])\ntrain <- train[,-1]\n\nrowP <-  rep(0, 288) \n\ntestM <- as.matrix(test)\nfor(i in 1:nrow(testM)){\n  rowP <- createMatrix(testM[i,])\n  testP <-  rbind(testP,as.vector(rowP))\n}\n\ntrainM <- as.matrix(train)\nfor(i in 1:nrow(trainM)){\n  rowP <- createMatrix(trainM[i,])\n  trainP <-  rbind(trainP,as.vector(rowP))\n}\ntestDF <- data.frame(testP)\ntrainDF <- data.frame(trainP)\nlabelsF <- as.factor(labels)\nmodel <- kknn(labels ~ ., trainDF, testDF, k=9, kernel=\"triangular\")$call\nresults <- model$fitted.values\n\n# save the output as column vector\nwrite(as.numeric(levels(results))[results], file=\"kknn_submission.csv\", ncolumns=1)\n",
    "created" : 1371037143183.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2591196465",
    "id" : "336AE406",
    "lastKnownWriteTime" : 1371564216,
    "path" : "C:/numbers/numbers1.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}